# default layout (can be bsp, stack or float)
yabai -m config layout bsp

# new window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

# -- mouse settings --

# center mouse on window with focus
yabai -m config mouse_follows_focus on

# modifier for clicking and dragging with mouse
yabai -m config mouse_modifier alt
# set modifier + left-click drag to move window
yabai -m config mouse_action1 move
# set modifier + right-click drag to resize window
yabai -m config mouse_action2 resize

# when window is dropped in center of another window, swap them (on edges it will split it)
yabai -m mouse_drop_action swap


# disable specific apps
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Configuración del Sistema$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app="^QuickTime Player$" manage=off
yabai -m rule --add app="^Asistente Configuración Teclado$" manage=off
yabai -m rule --add app="^LinearMouse$" manage=off
yabai -m rule --add app="^Docker Desktop$" manage=off
yabai -m rule --add app="^Acceso: Cuentas de Google$" manage=off
yabai -m rule --add app="^Monitor de Actividad$" manage=off
yabai -m rule --add app="^Raycast Settings$" manage=off
yabai -m rule --add app="^Raycast$" manage=off
yabai -m rule --add app="^Google Drive$" manage=off
yabai -m rule --add app="^ColorSlurp$" manage=off

# -- Multi-Display Padding Configuration --
# Configuración optimizada para mejor rendimiento

# Configuración global por defecto
yabai -m config window_gap 5

# Configuración de padding base para todos los espacios
yabai -m config top_padding 2
yabai -m config bottom_padding 5
yabai -m config left_padding 5
yabai -m config right_padding 5
# Función optimizada para configurar padding dinámicamente
setup_padding() {
    local display_count=$(yabai -m query --displays | jq -r 'length')

    # Cache del estado actual para evitar reconfiguración innecesaria
    local current_state_file="$HOME/.config/yabai/.display_state"
    local new_state="displays:$display_count"

    # Verificar si ya está configurado correctamente
    if [ -f "$current_state_file" ] && [ "$(cat "$current_state_file")" = "$new_state" ]; then
        return 0
    fi

    if [ "$display_count" -gt 1 ]; then
        # Solo configurar espacios que necesitan cambios (1-5 con top_padding diferente)
        # Usar un solo comando para múltiples espacios cuando sea posible
        yabai -m config --space 1 top_padding 30
        yabai -m config --space 2 top_padding 30
        yabai -m config --space 3 top_padding 30
        yabai -m config --space 4 top_padding 30
        yabai -m config --space 5 top_padding 30
        # El espacio 6 ya tiene la configuración correcta (12) por defecto
    else
        # Resetear solo los espacios que podrían haber cambiado (1-5)
        yabai -m config --space 1 top_padding 5
        yabai -m config --space 2 top_padding 5
        yabai -m config --space 3 top_padding 5
        yabai -m config --space 4 top_padding 5
        yabai -m config --space 5 top_padding 5
    fi

    # Guardar el estado actual
    echo "$new_state" > "$current_state_file"
}

# Configurar padding inicial
setup_padding

# Script optimizado para cambios de display
cat > "$HOME/.config/yabai/display_handler.sh" << 'EOF'
#!/bin/bash
# Solo reconfigurar padding, evitar restart completo
source "$HOME/.config/yabai/yabairc"
setup_padding
EOF
chmod +x "$HOME/.config/yabai/display_handler.sh"

# Configurar eventos optimizados (sin restart completo)
yabai -m signal --add event=display_added action="$HOME/.config/yabai/display_handler.sh"
yabai -m signal --add event=display_removed action="$HOME/.config/yabai/display_handler.sh"